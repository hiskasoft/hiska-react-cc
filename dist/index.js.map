{"version":3,"file":"index.js","sources":["../src/forms/Icon.tsx","../src/forms/FormItem.tsx","../src/forms/Feedback.tsx","../src/layouts/Grid.tsx","../src/layouts/Panel.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react'\n\ntype Props = {\n    hide?: boolean,\n    name: string,\n    size?: string,\n    color?: string,\n    family?: string,\n    className?: string,\n    append?: boolean,\n    style?: CSSProperties\n}\nexport const Icon: React.FC<Props> = (\n    {\n        hide = false,\n        append = false,\n        name = 'check',\n        size = '',\n        color = '',\n        family = 'fa',\n        className = '',\n        ...others\n    }\n) => {\n    if (hide) {\n        return null;\n    }\n    const _size = size ? `${family}-${size}` : '';\n    const _color = color ? `text-${color}` : '';\n    const _append = append? 'input-group-text' : '';\n    const _icon = <i className={`${_append} ${family} ${family}-${name} ${_size} ${_color} ${className}`} {...others} />\n\n    return append ? <span className=\"input-group-prepend\">{_icon}</span> : _icon\n}\n","import React, { CSSProperties } from 'react'\nimport './FormItem.css'\nimport { Icon } from './Icon';\ntype Props = {\n    hide?: boolean,\n    label?: string | any,\n    title?: string,\n    size?: string,\n    col?: number,\n    helpFeedback?: any,\n    invalidFeedback?: any,\n    validFeedback?: any,\n    children?: any,\n    className?: string,\n    style?: CSSProperties\n}\nexport const FormItem: React.FC<Props> = (\n    {\n        hide = false,\n        label,\n        title,\n        size = 'sm',\n        col = 2,\n        helpFeedback,\n        invalidFeedback,\n        validFeedback,\n        children,\n        className = '',\n        style\n    }\n) => {\n    if (hide) {\n        return null;\n    }\n    let colLabel = label ? col : 0;\n    let colInput = colLabel == 12 ? 12 : (12 - colLabel)\n    helpFeedback = helpFeedback ? <div className=\"help\">{helpFeedback}</div> : null;\n    invalidFeedback = invalidFeedback ? <div className=\"invalid-feedback\">{invalidFeedback}</div> : null;\n    validFeedback = validFeedback ? <div className=\"valid-feedback\">{validFeedback}</div> : null;\n    children = itemContentTransform(children, {});\n    return (\n        <div className={`row ${className}`} title={title} style={style}>\n            <label className={` col-${colLabel} col-form-label col-form-label-${size}`}>\n                {label}\n                {helpFeedback}\n            </label>\n            <span className={`input-group input-group-${size} col-${colInput} form-check`}>\n                {children}\n                {invalidFeedback}\n                {validFeedback}\n            </span>\n        </div>\n    )\n}\n\n\nconst itemContentTransform = (childrenRoot: any, itemProps: any) => {\n    let {\n        size\n    } = itemProps;\n    return React.Children.map(childrenRoot, (child: any, ix: number) => {\n        let { type, props = {} } = child;\n        let { className = '' } = props;\n        switch (type) {\n            case 'button':\n                child = React.cloneElement(child, { ...props, className: `btn btn-${size} btn-outline-secondary ${className}` });\n                return <div className=\"input-group-prepend\">{child}</div>\n            case 'span':\n                child = React.cloneElement(child, { ...props, className: `input-group-text ${className}` });\n                return <div className=\"input-group-prepend\">{child}</div>\n            case 'input':\n            case 'textarea':\n                return React.cloneElement(child, { ...props, className: `form-control form-control-${size}  ${className}` });\n            case 'select':\n                return React.cloneElement(child, { ...props, className: `custom-select form-control form-control-${size}  ${className}` });\n            case Icon:\n                return React.cloneElement(child, { ...props, append: true });\n        }\n        return child;\n    })\n\n}","import React, { CSSProperties } from 'react'\nimport { Icon } from './Icon';\nimport styles from './Feedback.css'\n\ntype Value = {\n    type: 'info' | 'error' | 'warning' | 'success' | '',\n    message: string\n}\nconst ICON = {\n    'info': 'info-circle',\n    'error': 'times-circle',\n    'warning': 'exclamation-circle',\n    'success': 'check-circle',\n    '': 'circle'\n}\nconst COLOR = {\n    'info': 'info',\n    'error': 'danger',\n    'warning': 'warning',\n    'success': 'success',\n    '': 'default'\n}\n\ninterface Props {\n    hide?: boolean,\n    value?: Value,\n    type?: 'info' | 'error' | 'warning' | 'success' | '',\n    message?: string,\n    icon?: string,\n    color?: string,\n    children?: any,\n    size?: 'sm' | 'md' | 'lg',\n    className?: string\n    style?: CSSProperties\n}\n\nexport const Feedback: React.FC<Props> = (\n    {\n        hide = false,\n        value,\n        icon,\n        type = '',\n        size = 'sm',\n        color,\n        message = '',\n        className = '',\n        children,\n        ...others\n    }\n) => {\n    if (hide) {\n        return null;\n    }\n    if (value) {\n        type = value.type;\n        message = value.message;\n    }\n    if (!message) {\n        return null;\n    }\n    icon = icon ? icon : ICON[type];\n    color = color ? color : COLOR[type];\n    console.log('styles',styles);\n    \n    return (\n        <div className={`${styles.feedback} feedback-${type} feedback-${size} text-${color} ${className}`} {...others}>\n            <Icon name={icon} family=\"fa\" className=\"mr-1\" size=\"1x\" />\n            <span>{message}</span>\n            {children}\n        </div>\n    )\n}\n","import React, { CSSProperties } from 'react'\nimport { FormItem } from '../forms/FormItem';\n\n\ninterface Props {\n    hide?: boolean,\n    cols?: number[],\n    colsSm?: number[],\n    colsMd?: number[],\n    colsLg?: number[],\n    colsXl?: number[],\n    gutters?: boolean,\n    justify?: 'start' | 'center' | 'end' | 'around' | 'between' | '',\n    size?: 'sm' | '' | 'lg',\n    className?: string\n    style?: CSSProperties\n}\nexport const Grid: React.FC<Props> = (\n    {\n        hide = false,\n        cols = [],\n        colsSm = [],\n        colsMd = [],\n        colsLg = [],\n        colsXl = [],\n        size = '',\n        gutters = false,\n        justify = '',\n        className = '',\n        children = [],\n        ...other\n    }\n) => {\n    if (hide === true) {\n        return null;\n    }\n    let _children = gridContentTransform(children, {\n        cols,\n        colsSm,\n        colsMd,\n        colsLg,\n        colsXl,\n        size,\n    });\n    const _justify = justify ? 'justify-content-' + justify : '';\n    const _gutters = gutters ? 'no-gutters' : '';\n    return (\n        <div className={`row ${_justify} ${_gutters} ${className}`} {...other}>\n            {_children}\n        </div>\n    )\n}\n\nconst gridContentTransform = (childrenRoot: any, gridProps: any) => {\n    let {\n        cols,\n        colsSm,\n        colsMd,\n        colsLg,\n        colsXl,\n        size\n    } = gridProps;\n    return React.Children.map(childrenRoot, (child: any, ix: number) => {\n        let { type, props = {} } = child;\n        let { className = '' } = props;\n        let classNameCol = `${decodeCols('col-', ix, cols)} ${decodeCols('col-sm-', ix, colsSm)} ${decodeCols('col-md-', ix, colsMd)} ${decodeCols('col-lg-', ix, colsLg)} ${decodeCols('col-xl-', ix, colsXl)}`;\n        switch (type) {\n            case 'label':\n                child = React.cloneElement(child, { ...props, className: `col-form-label col-form-label-${size} ${className}` });\n                break;\n            case 'input':\n            case 'select':\n            case 'textarea':\n                child = React.cloneElement(child, { ...props, className: `form-control form-control-${size}  ${className}` });\n                break;\n            case FormItem:\n                child = React.cloneElement(child, { ...props, size });\n                break;\n            case 'div':\n                return React.cloneElement(child, { ...props, className: `${classNameCol} ${className}` });\n        }\n        return <div className={classNameCol}>{child}</div>\n    })\n\n}\n\nconst decodeCols = function (type: string, index: number, cols: number[]) {\n    return cols && cols.length ? type + cols[index % cols.length] : '';\n}\n","import React, { CSSProperties } from 'react'\nimport { Grid } from './Grid';\n\ninterface Props {\n    hide?: boolean,\n    title?: string,\n    align?: 'center' | 'left' | 'right',\n    mode?: 'card' | 'panel' | 'subpanel' | 'modal',\n    color?: 'default' | 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark',\n    className?: string,\n    style?: CSSProperties\n}\n\nconst mainContentTransform = (childrenRoot: any, panelProps: any) => {\n    let { mode } = panelProps;\n    return React.Children.map(childrenRoot, (child: any) => {\n        let { type, props = {} } = child;\n        let { className = '' } = props;\n\n        switch (type) {\n            case 'title':\n                return React.cloneElement({ ...child, type: 'h5' }, { ...props, className: `${mode}-title ${className}` });\n            case 'h5':\n                return React.cloneElement(child, { ...props, className: `${mode}-title ${className}` });\n            case 'h6':\n                return React.cloneElement(child, { ...props, className: `${mode}-subtitle ${className}` });\n            case 'p':\n                return React.cloneElement(child, { ...props, className: `${mode}-text ${className}` });\n            case 'a':\n                return React.cloneElement(child, { ...props, className: `${mode}-link ${className}` });\n        }\n        return child;\n    })\n}\n\nconst panelContentTransform = (childrenRoot: any, panelProps: any) => {\n    let { mode, color, title } = panelProps;\n    return React.Children.map(childrenRoot, (child: any) => {\n        let { type, props = {} } = child;\n        let { className = '' } = props;\n\n        let _children, _title;\n        switch (type) {\n            case 'header':\n                return React.cloneElement({ ...child, type: 'div' }, { ...props, className: `${mode}-header font-weight-bold bg-${color} ${className}` });\n            case 'footer':\n                return React.cloneElement({ ...child, type: 'div' }, { ...props, className: `${mode}-footer ${className}` });\n            case 'main':\n                _children = mainContentTransform(child.props.children, panelProps);\n                _title = title ? <h4 className={`${mode}-title`}>{title}</h4> : null;\n                return React.cloneElement({ ...child, type: 'div' }, { ...props, className: `${mode}-body ${className}` }, _title, _children);\n            case Grid:\n                _title = title ? <h4 className={`${mode}-title`}>{title}</h4> : null;\n                return <div className={`${mode}-body`} >{_title}{child}</div>\n        }\n        return child;\n    })\n\n}\n\nexport const Panel: React.FC<Props> = (props) => {\n    let {\n        hide = false,\n        title = '',\n        align = 'center',\n        mode = 'card',\n        color = 'primary',\n        className = '',\n        children = [],\n        ...others\n    } = props;\n    if (hide === true) {\n        return null;\n    }\n    let _children = panelContentTransform(children, { mode, color, title });\n    return (\n        <div className={`${mode} border-${color} ${className}`} {...others}>\n            {_children}\n        </div>\n    )\n}"],"names":["Icon","hide","append","name","size","color","family","className","others","_size","_color","_append","_icon","React","FormItem","label","title","col","helpFeedback","invalidFeedback","validFeedback","children","style","colLabel","colInput","itemContentTransform","childrenRoot","itemProps","Children","map","child","ix","type","props","cloneElement","ICON","COLOR","Feedback","value","icon","message","console","log","styles","feedback","Grid","cols","colsSm","colsMd","colsLg","colsXl","gutters","justify","other","_children","gridContentTransform","_justify","_gutters","gridProps","classNameCol","decodeCols","index","length","mainContentTransform","panelProps","mode","panelContentTransform","_title","Panel"],"mappings":"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"}